version: "3.3"
services:
  mongo:
    image: mongo:latest
    ports:
      - "20717:20717"
    volumes:
      # - /data/db # Create a volume for the DB.
      - type: volume
        source: dbdata
        target: /data/db
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: always
    env_file:
     - ./src/.env
    # environment:
    #   - NODE_ENV=development
    #   - REACT_APP_API_URL=http://localhost:8081
    #   - CHOKIDAR_USEPOLLING=true # Hot reloading create react app : https://mherman.org/blog/dockerizing-a-react-app/ ; https://create-react-app.dev/docs/troubleshooting/#npm-start-doesn-t-detect-changes
    restart: always
    stdin_open: true # Hot reloading create react app: https://github.com/facebook/create-react-app/issues/8688#issuecomment-602110747
    volumes:
      - ./client:/opt/app #Synchronise docker container with local change
      - /opt/app/node_modules #Avoid re-copying local node_modules. Cache in container.
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      - mongo
    env_file:
     - ./backend/.env
    # environment:
    #   - NODE_ENV=development
    #   - MONGO_URI=mongodb://mongo:27017/DEV
    #   - PORT=8081
    #   - HOST=localhost:3000
    #   - SENDGRID_API_KEY=<YOUR_KEY_HERE>
    #   - SENDING_EMAIL=<YOUR_SENDING_EMAIL_HERE>
    #   - SESSION_KEY=<YOUR_KEY_HERE>
    ports:
      - "8081:8081"
    restart: always
    volumes:
      - ./server:/opt/app #Synchronise docker container with local change
      - /opt/app/node_modules #Avoid re-copying local node_modules. Cache in container.
